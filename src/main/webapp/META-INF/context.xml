<?xml version="1.0" encoding="UTF-8"?>
<Context>

	<!-- Default set of monitored resources -->
	<!-- <WatchedResource>WEB-INF/web.xml</WatchedResource> -->
	<WatchedResource>WEB-INF/classes/ca/blackperl/hibernate/hibernate.cfg.xml
	</WatchedResource>

	<!-- Uncomment this to disable session persistence across Tomcat restarts -->
	<!-- <Manager pathname="" /> -->

	<!-- Uncomment this to enable Comet connection tacking (provides events 
		on session expiration as well as webapp lifecycle) -->
	<!-- <Valve className="org.apache.catalina.valves.CometConnectionManagerValve" 
		/> -->
	<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource"
		maxActive="100" maxIdle="30" maxWait="10000"
		driverClassName="org.apache.derby.jdbc.ClientDriver" url="jdbc:derby://localhost:1527/testdata" />

	<Resource name="jdbc/jdbcDemoDB" auth="Container" type="javax.sql.DataSource"
		maxActive="100" maxIdle="30" maxWait="10000"
		driverClassName="org.apache.derby.jdbc.ClientDriver" url="jdbc:derby://localhost:1527/jdbcDemoDB" />

	<!-- org.apache.derby.jdbc.EmbeddedDriver -->
	<Resource name="jdbc/firstdb" auth="Container" type="javax.sql.DataSource"
		maxActive="100" maxIdle="30" maxWait="10000"
		driverClassName="org.apache.derby.jdbc.ClientDriver" url="jdbc:derby://localhost:1527/firstdb" />

	<Resource name="jdbc/seconddb" auth="Container" type="javax.sql.DataSource"
		maxActive="100" maxIdle="30" maxWait="10000"
		driverClassName="org.apache.derby.jdbc.ClientDriver" url="jdbc:derby://localhost:1527/seconddb" />

	<Resource name="jdbc/eventsDb1" auth="Container" type="javax.sql.DataSource"
		maxActive="100" maxIdle="30" maxWait="10000"
		driverClassName="org.apache.derby.jdbc.ClientDriver" url="jdbc:derby://localhost:1527/eventsDb;create=true" />

	<Resource name="jdbc/eventsDb2" auth="Container" type="javax.sql.DataSource"
		maxActive="100" maxIdle="30" maxWait="10000"
		driverClassName="org.apache.derby.jdbc.ClientDriver" url="jdbc:derby://localhost:1527/eventsDb2;create=true" />

	<!-- https://tomcat.apache.org/tomcat-7.0-doc/config/context.html#Resource_Links -->
	<!-- When the attribute factory="org.apache.naming.factory.DataSourceLinkFactory" 
		the resource link can be used with two additional attributes to allow a shared 
		data source to be used with different credentials. When these two additional 
		attributes are used in combination with the javax.sql.DataSource type, different 
		contexts can share a global data source with different credentials. Under 
		the hood, what happens is that a call to getConnection() is simply translated 
		to a call getConnection(username, password) on the global data source. This 
		is an easy way to get code to be transparent to what schemas are being used, 
		yet be able to control connections (or pools) in the global configuration. -->
	<ResourceLink name="jdbc/eventsDb3" global="jdbc/eventsDb3"
		type="javax.sql.DataSource" />

	<!-- public class EmbeddedDataSource extends org.apache.derby.jdbc.ReferenceableDataSource 
		implements Referenceable This data source is suitable for an application 
		using embedded Derby, running on full Java SE 6 and higher, corresponding 
		to 4.0 and higher. A DataSource is a factory for Connection objects. An object 
		that implements the DataSource interface will typically be registered with 
		a JNDI service provider. -->
	<Resource name="jdbc/eventsDb4" auth="Container" type="javax.sql.DataSource"
		driverClassName="org.apache.derby.jdbc.EmbeddedDriver" url="jdbc:derby:eventsDb;create=true" />

	<Resource name="jdbc/eventsDb" auth="Container" type="javax.sql.DataSource"
		driverClassName="org.apache.derby.jdbc.EmbeddedDriver" url="jdbc:derby:eventsDb2;create=true" />

</Context>